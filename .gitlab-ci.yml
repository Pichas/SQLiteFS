variables:
  GIT_STRATEGY: none
  PACKAGENAME: '$CI_PROJECT_NAME-$CI_COMMIT_TAG.zip'
  URL: '$CI_API_V4_URL/projects/$CI_PROJECT_ID/packages/generic/$CI_PROJECT_NAME/$CI_COMMIT_TAG/'

stages:
  - build
  - prepare
  - release

.build:
  variables:
    GIT_STRATEGY: fetch
  stage: build
  interruptible: true
  script:
    - cmake --preset clang
    - cmake --build --preset clang --config Debug
    - cmake --build --preset clang --config Release
    - cp -r build/clang/lib/Release export
    - cp -r build/clang/lib/Debug export
    - cp -r includes export
    - cd build/clang
    - ctest -V -C Debug
    - ctest -V -C Release
  artifacts:
    expire_in: 1 week
    paths:
      - export

build:windows:
  extends: [.build]
  tags:
    - windows

build:linux:
  extends: [.build]
  image: registry.gitlab.com/p34ch-main/docker-images/clang
  tags:
    - docker

prepare:
  stage: prepare
  image: registry.gitlab.com/p34ch-main/docker-images/common
  script:
    - zip -r -9 ${PACKAGENAME} export
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file ${PACKAGENAME} "${URL}${PACKAGENAME}"'
  rules:
    - if: $CI_COMMIT_TAG
  tags:
    - docker
  dependencies:
    - build:windows
  needs:
    - build:windows

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  variables:
    GIT_STRATEGY: none
  rules:
    - if: $CI_COMMIT_TAG
  tags:
    - docker
  script:
    - echo "Create release"
  needs:
    - prepare
  release:
    name: 'Release $CI_COMMIT_TAG'
    tag_name: '$CI_COMMIT_TAG'
    description: '$CI_COMMIT_TAG_MESSAGE'
    assets:
        links:
          - name: 'Release_${PACKAGENAME}'
            url: '${URL}${PACKAGENAME}'
            link_type: 'package'

